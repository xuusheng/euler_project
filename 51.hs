-- 依照下面的顺序试，只要找到实例，即中止尝试。应该把这个过程也包装到程序里面去。
-- xxxab No
-- xxaxb No
-- xaxxb No
-- axxxb No

-- xxxabc No
-- xxaxbc No
-- xxabxc No
-- xaxxbc No
-- xaxbxc 233 121313
-- xabxxc No
-- axxxbc No
-- axxbxc No
-- axbxxc No
-- abxxxc No



import Data.List
isprime x
  | x < 2 = False
  | otherwise = all (\p -> x `mod` p > 0) (factorsToTry x) 
  where 
    factorsToTry x = takeWhile (\p -> p*p <= x) primes 

primes= 2 : [x | x <- [3..], isprime x] 

list2 = [11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97]
        -- 所有两位质数
list3 = [101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997]
        -- 所有三位质数


to5 x = x `div` 100 * 10000 + x `div` 10 `mod` 10 * 10 + x `mod` 10
        -- 转化为5位或6位数

boolist x = map (isprime) $take 10 $iterate (+ 101100) $ to5 x
            -- 打印出真值表，对于x居首的情况，第一个True不算。

howmany x = foldl (\x y-> (if y then x + 1 else x)) 0 $ boolist x
            -- 计算家族中有多少个质数

indices = elemIndices 8 $ map (howmany) list3
          -- 初步筛选出结果，还得进一步用boolist验证
